/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Clases;

import Conexion.Conectar;
import Conexion.Conexion;
import Conexion.Server;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.YES_NO_OPTION;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jasam
 *
 */
public class Almacen extends javax.swing.JFrame {
    Conexion cc = new Conexion();
    Connection cin = cc.getConexion();
    PreparedStatement ps;
    static ResultSet rs;
    String nomTabla, sql;
    String HOST, mensaje, respuesta, IP1, IP2, IP3;
    int PUERTO;
    boolean inventario, existencia;
    public Almacen() {
        
initComponents();
        
 HOST = "5000";
 PUERTO = 5000;
        
    String IP1 = "192.168.1.88"; //Tabla Inventario
    String IP2 = "192.168.1.204"; //Tabla Pedido
    String IP3 = "10.10.4.218";  // Servidor 3  Tabla:Libros
        Server s = new Server();
        Thread t = new Thread(s);
        t.start();
        
        vertodo();
        
        
           P_buscar.setVisible(false);
           DateTimeFormatter formateador = DateTimeFormatter.ofPattern("HH:mm:ss");
        Runnable runnable = new Runnable() {
    @Override
    public void run() {
        while (true) {
            try {
                Thread.sleep(500);
                Time.setText("Hora "+formateador.format(LocalDateTime.now()));
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
};
Thread hilo = new Thread(runnable);
hilo.start();
    
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        B_consultas = new javax.swing.JButton();
        B_borrar = new javax.swing.JButton();
        B_altas = new javax.swing.JButton();
        B_modificar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        Time = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        P_buscar = new javax.swing.JPanel();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        B_volver = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        B_consultas.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        B_consultas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_edit_property_24px_1.png"))); // NOI18N
        B_consultas.setText("Consultas");
        B_consultas.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));
        B_consultas.setContentAreaFilled(false);
        B_consultas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_consultasActionPerformed(evt);
            }
        });
        getContentPane().add(B_consultas);
        B_consultas.setBounds(290, 90, 150, 40);

        B_borrar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        B_borrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_delete_48px.png"))); // NOI18N
        B_borrar.setText("Borrar");
        B_borrar.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));
        B_borrar.setContentAreaFilled(false);
        B_borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_borrarActionPerformed(evt);
            }
        });
        getContentPane().add(B_borrar);
        B_borrar.setBounds(150, 90, 130, 40);

        B_altas.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        B_altas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_plus_24px.png"))); // NOI18N
        B_altas.setText("Altas");
        B_altas.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));
        B_altas.setContentAreaFilled(false);
        B_altas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_altasActionPerformed(evt);
            }
        });
        getContentPane().add(B_altas);
        B_altas.setBounds(10, 90, 130, 40);

        B_modificar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        B_modificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_edit_property_24px_1.png"))); // NOI18N
        B_modificar.setText("Modificar");
        B_modificar.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));
        B_modificar.setContentAreaFilled(false);
        B_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_modificarActionPerformed(evt);
            }
        });
        getContentPane().add(B_modificar);
        B_modificar.setBounds(450, 90, 140, 40);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Codigo", "Descripci√≥n", "Piezas", "Precio"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 140, 1020, 520);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(null);

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel20.setText("28/04/2021");
        jLabel20.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));
        jPanel2.add(jLabel20);
        jLabel20.setBounds(730, 810, 170, 30);

        Time.setBackground(new java.awt.Color(0, 153, 204));
        Time.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Time.setText("03:43 pm");
        Time.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));
        jPanel2.add(Time);
        Time.setBounds(900, 600, 140, 30);

        jLabel4.setBackground(new java.awt.Color(0, 153, 204));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("12/05/2021");
        jLabel4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));
        jPanel2.add(jLabel4);
        jLabel4.setBounds(760, 600, 140, 30);

        P_buscar.setBackground(new java.awt.Color(255, 255, 255));
        P_buscar.setLayout(null);

        txtBuscar.setForeground(new java.awt.Color(153, 153, 153));
        txtBuscar.setText("Escribe el codigo del producto");
        txtBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBuscarMouseClicked(evt);
            }
        });
        P_buscar.add(txtBuscar);
        txtBuscar.setBounds(12, 5, 270, 30);

        btnBuscar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_search_24px.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));
        btnBuscar.setContentAreaFilled(false);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        P_buscar.add(btnBuscar);
        btnBuscar.setBounds(300, 5, 110, 30);

        jPanel2.add(P_buscar);
        P_buscar.setBounds(170, 590, 410, 40);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 80, 1050, 660);

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ALMACEN");

        B_volver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_go_back_60px_1.png"))); // NOI18N
        B_volver.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        B_volver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                B_volverMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(B_volver)
                .addGap(308, 308, 308)
                .addComponent(jLabel1)
                .addContainerGap(565, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(B_volver))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1180, 80);

        setSize(new java.awt.Dimension(1064, 761));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
private int click;
    private void B_consultasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_consultasActionPerformed
        // TODO add your handling code here:
             click++;
        if (click==1){
       P_buscar.setVisible(true);
    
        }else{
              P_buscar.setVisible(false);
              click=0;
        }
    }//GEN-LAST:event_B_consultasActionPerformed

    private void B_altasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_altasActionPerformed
        // TODO add your handling code here:
         Altas_productos p= new Altas_productos();
        p.setVisible(true);
        dispose();
    }//GEN-LAST:event_B_altasActionPerformed

    private void B_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_modificarActionPerformed
        // TODO add your handling code here:
        Modificar_producto p= new Modificar_producto();
        p.setVisible(true);
        dispose();
    }//GEN-LAST:event_B_modificarActionPerformed

    private void B_volverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_B_volverMouseClicked
        // TODO add your handling code here:
 Punto_de_venta p= new Punto_de_venta();
        p.setVisible(true);
        dispose();
    }//GEN-LAST:event_B_volverMouseClicked

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
         consulta();
    }//GEN-LAST:event_btnBuscarActionPerformed
private int usuclick =0;
    private void txtBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBuscarMouseClicked
        // TODO add your handling code here:
        txtBuscar.setForeground(new java.awt.Color(0, 0, 0));

        usuclick++;

        if (usuclick == 1) {

            txtBuscar.setText(null);

        }
    }//GEN-LAST:event_txtBuscarMouseClicked

    private void B_borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_borrarActionPerformed
        eliminar();
        
    }//GEN-LAST:event_B_borrarActionPerformed
     
   public void eliminar() {
       
        String cod = "";
        nomTabla = "inventario";
        
        comprobarExistencia("SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='dbo' AND TABLE_NAME = '" + nomTabla + "'");
        if (existencia) {

            int fila = jTable1.getSelectedRow(); //Varibale que guarda el # de fila seleccionado

            cod = jTable1.getValueAt(fila, 0).toString(); // Asignamos el ID del registro a la variable

            // Pedimos confirmaci√≥n de borrado
            int resp = JOptionPane.showConfirmDialog(null, "¬øEsta seguro que quieres eliminar el registro?", "Alerta!", JOptionPane.YES_NO_OPTION);
            if (resp == YES_NO_OPTION) { // Si recibimos confirmaci√≥n procedemos a borrar el registro
                try {
                    // Armamos la sentencia SQL
                    PreparedStatement pst = cin.prepareStatement("DELETE FROM " + nomTabla + " WHERE idProducto ='" + cod + "'");
                    int x = pst.executeUpdate(); // Validamos el estado de la eliminaci√≥n
                    if (x > 0) {
                        getToolkit().beep();
                        // Mostramos un mensaje gr√°fico que inidca que la operaci√≥n se llev√≥ a cabo con exito
                        JOptionPane.showMessageDialog(null, "Ha sido borrado exitosamente", "Confirmaci√≥n de borrado", JOptionPane.INFORMATION_MESSAGE);
                        String sql = "SELECT * FROM " + nomTabla + ";"; // Mostramos todos los registros de la tabla
                        visualizar();
                    }
                } catch (Exception e) {
                    System.out.println(e);
                }
            }

        } else {

            // El c√≥digo es parecido a su contraparte, con la diferencia que la acci√≥n se har√° en otro equipo y NO de manera local
            int fila = jTable1.getSelectedRow();
            cod = jTable1.getValueAt(fila, 0).toString();

            int resp = JOptionPane.showConfirmDialog(null, "¬øEsta seguro que quieres eliminar el registro?", "Alerta!", JOptionPane.YES_NO_OPTION);
            if (resp == YES_NO_OPTION) {

                HOST = IP2; // Le pasamos la IP al HOST
                // Armamos la sentencia SQL de tipo eliminaci√≥n y se la pasamos al m√©todo que se comunicar√° con el servidor
                mensaje = "DELETE FROM " + nomTabla + " WHERE idProducto ='" + cod + "'";
                sockerCliente(); // M√©todo que se comunicar√° con elervidor
            }
        }   
    
        
    }
   public void consulta() {
        
    nomTabla = "inventario"; // Especificamos el nombre de la tabla
    comprobarExistencia("SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='dbo' AND TABLE_NAME = '" + nomTabla + "'");
    if (existencia) {
        sql = "SELECT * FROM " + nomTabla + " WHERE idProducto LIKE '%" + txtBuscar.getText() + "%'";
                visualizar(); // Mostramos los datos obtenidos
    }else{
        HOST = IP2;
                // Consulta por ID
                mensaje = "SELECT * FROM " + nomTabla + " WHERE idProducto LIKE '%" + txtBuscar.getText() + "%'";
                sockerCliente();
        }
        
    }    
    
   public void visualizar() {

        ResultSet rs = null;
        DefaultTableModel dt = new DefaultTableModel();
        dt.addColumn("Codigo");
        dt.addColumn("Descripcion");
        dt.addColumn("Piezas");
        dt.addColumn("Precio");
        jTable1.setModel(dt);
        
        try {
            Object[] fila = new Object[5];
            Statement st = cin.createStatement();
            rs = st.executeQuery(sql);
            while (rs.next()) {
                fila[0] = rs.getString(1);
                fila[1] = rs.getString(2);
                fila[2] = rs.getString(3);
                fila[3] = rs.getString(4);
                dt.addRow(fila);
            }
            jTable1.setModel(dt);
        } catch (Exception e) {
            System.out.println("*** Error al visualizar la tabla *** ");

        }

    }
   
   public void vertodo(){
       inventario = true; // Habilitamos una bandera
       nomTabla = "inventario"; // Especificacmos el nombre de la tabla de la cual se requieren los datos
       
       comprobarExistencia("SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='dbo' AND TABLE_NAME = '" + nomTabla + "'");
        if (existencia) {

            sql = "SELECT * FROM " + nomTabla + ";";  // Armamos la sentencia SQL
            
            visualizar(); // M√©todo que muestra gr√°ficammente la consulta

        } else {

            HOST = IP2; // Le pasamoa la IP al HOST con el cual se conectar√° el cliente
           
            mensaje = "SELECT * FROM " + nomTabla + ";"; // Armamos la sentencia SQL
            sockerCliente(); // Llamamos el m√©todo que se encargar√° de la comunicaci√≥n entre el cliente y el servidor
        }
   }
    
   public void sockerCliente() {

        DefaultTableModel modelo = new DefaultTableModel(); // Definimos una tabla temporal para guardar los datos

        modelo.addColumn("Codigo"); // Declaramos cada una de las columnas que tendr√° dicha tabla
        modelo.addColumn("Descripci√≥n");
        modelo.addColumn("Piezas");
        modelo.addColumn("Precio");


        String[] datos = new String[5]; // Declaramos un vector para guardar los datos

        // Creamos unas variables que nos ayudar√°n posteriormente
        int cont = 0, fin = 0;
        String aux = "";

        //Declaramos una variables especiales para los mensajes de entrada y salida
        DataInputStream in;  // para las instrucciones de entrada (servidor-cliente
        DataOutputStream out;   // para las instrucciones de salida (cliente-servidor)

        try {
            //Instacioamos la clase Socket, creamos un cliente que apunta a la IP y puerto del servidor
            Socket sc = new Socket(HOST, PUERTO); // dichos par√°metros han sido espesificados anteriormente

            in = new DataInputStream(sc.getInputStream()); // variable que guarda los mensajes que manda el servidor (recibe)(respuesta)
            out = new DataOutputStream(sc.getOutputStream()); // variableque guarda los mensajes que le manda al servidor (manda)(peticion)

            out.writeUTF(mensaje); // manda mensaje al servidor (peticion)

            System.out.println("Mensaje del cliente: " + mensaje); // Muestro el mensaje enviado en la ventana de Output

            respuesta = in.readUTF(); // recibe el mensaje del servidor (respuesta)
            System.out.println("Respuesta del servidor: " + respuesta); // Muestro el mensaje

            if ((respuesta.contains("Conectado")) || respuesta.contains("Desconectado") || respuesta.contains("Se") || respuesta.contains("Ha")) {
                if (respuesta.contains("insert√≥")) {
                    JOptionPane.showMessageDialog(null, "Registro Guardado");


                } else {
                    if (respuesta.contains("actualiz√≥")) {
                        JOptionPane.showMessageDialog(null, "Registro Actualizado");


                    } else {
                        if (respuesta.contains("Elimino")) {
                            JOptionPane.showMessageDialog(null, "Registro Eliminado");
                        } else {

                        }
                    }
                }

            } else {
                if (respuesta.equals("(0)")) {

                } else {

                    fin = respuesta.lastIndexOf(",");
                    cont = Integer.parseInt(respuesta.substring(1, 2));
                    respuesta = respuesta.substring(3, fin + 1);
                }
            }

            if (respuesta.equals("")) {
                sc.close();
            }

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Servidor no encontrado - Verifique la direcci√≥n IP", "Error", JOptionPane.WARNING_MESSAGE);
        }

        inventario = false;
    }
   
   public void comprobarExistencia(String sql) {
        try {
            Statement q = cin.createStatement();
            ResultSet w = q.executeQuery(sql);

            String[] consulta = new String[1];
            String aux = "";

            while (w.next()) {
                // codigo
                aux = consulta[0] = w.getString(1);
            }

            if (aux.isEmpty()) {
                existencia = false;
            } else {
                existencia = true;
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex, "Error", JOptionPane.WARNING_MESSAGE);
            System.out.println("aqui " + ex);
        }
    }



   
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Almacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Almacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Almacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Almacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Almacen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B_altas;
    private javax.swing.JButton B_borrar;
    private javax.swing.JButton B_consultas;
    private javax.swing.JButton B_modificar;
    private javax.swing.JLabel B_volver;
    private javax.swing.JPanel P_buscar;
    private javax.swing.JLabel Time;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables
}
